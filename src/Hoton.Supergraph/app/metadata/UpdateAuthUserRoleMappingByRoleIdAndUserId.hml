---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnAuthUserRoleMappingRoleId
  description: Update the 'role_id' column in the 'auth_user_role_mapping' collection
  fields:
    - name: set
      type: Varchar!
      description: Set the column to this value
  graphql:
    typeName: UpdateColumnAuthUserRoleMappingRoleId
    inputTypeName: UpdateColumnAuthUserRoleMappingRoleIdInput
  dataConnectorTypeMapping:
    - dataConnectorName: hoton_main_pg
      dataConnectorObjectType: update_column_auth_user_role_mapping_role_id
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnAuthUserRoleMappingRoleId
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnAuthUserRoleMappingUserId
  description: Update the 'user_id' column in the 'auth_user_role_mapping' collection
  fields:
    - name: set
      type: Varchar!
      description: Set the column to this value
  graphql:
    typeName: UpdateColumnAuthUserRoleMappingUserId
    inputTypeName: UpdateColumnAuthUserRoleMappingUserIdInput
  dataConnectorTypeMapping:
    - dataConnectorName: hoton_main_pg
      dataConnectorObjectType: update_column_auth_user_role_mapping_user_id
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnAuthUserRoleMappingUserId
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateAuthUserRoleMappingByRoleIdAndUserIdUpdateColumns
  description: Update the columns of the 'auth_user_role_mapping' collection
  fields:
    - name: roleId
      type: UpdateColumnAuthUserRoleMappingRoleId
      description: Update the 'role_id' column in the 'auth_user_role_mapping' collection.
    - name: userId
      type: UpdateColumnAuthUserRoleMappingUserId
      description: Update the 'user_id' column in the 'auth_user_role_mapping' collection.
  graphql:
    typeName: UpdateAuthUserRoleMappingByRoleIdAndUserIdUpdateColumns
    inputTypeName: UpdateAuthUserRoleMappingByRoleIdAndUserIdUpdateColumnsInput
  dataConnectorTypeMapping:
    - dataConnectorName: hoton_main_pg
      dataConnectorObjectType: update_auth_user_role_mapping_by_role_id_and_user_id_update_columns
      fieldMapping:
        roleId:
          column:
            name: role_id
        userId:
          column:
            name: user_id

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateAuthUserRoleMappingByRoleIdAndUserIdUpdateColumns
  permissions:
    - role: admin
      output:
        allowedFields:
          - roleId
          - userId

---
kind: ObjectType
version: v1
definition:
  name: UpdateAuthUserRoleMappingByRoleIdAndUserIdResponse
  description: Responses from the
    'update_auth_user_role_mapping_by_role_id_and_user_id' procedure
  fields:
    - name: affectedRows
      type: Int4!
      description: The number of rows affected by the mutation
    - name: returning
      type: "[AuthUserRoleMapping!]!"
      description: Data from rows affected by the mutation
  graphql:
    typeName: UpdateAuthUserRoleMappingByRoleIdAndUserIdResponse
    inputTypeName: UpdateAuthUserRoleMappingByRoleIdAndUserIdResponseInput
  dataConnectorTypeMapping:
    - dataConnectorName: hoton_main_pg
      dataConnectorObjectType: update_auth_user_role_mapping_by_role_id_and_user_id_response
      fieldMapping:
        affectedRows:
          column:
            name: affected_rows
        returning:
          column:
            name: returning

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateAuthUserRoleMappingByRoleIdAndUserIdResponse
  permissions:
    - role: admin
      output:
        allowedFields:
          - affectedRows
          - returning

---
kind: Command
version: v1
definition:
  name: UpdateAuthUserRoleMappingByRoleIdAndUserId
  outputType: UpdateAuthUserRoleMappingByRoleIdAndUserIdResponse!
  arguments:
    - name: keyRoleId
      type: Varchar!
    - name: keyUserId
      type: Varchar!
    - name: postCheck
      type: AuthUserRoleMappingBoolExp
      description: Update permission post-condition predicate over the
        'auth_user_role_mapping' collection
    - name: preCheck
      type: AuthUserRoleMappingBoolExp
      description: Update permission pre-condition predicate over the
        'auth_user_role_mapping' collection
    - name: updateColumns
      type: UpdateAuthUserRoleMappingByRoleIdAndUserIdUpdateColumns!
  source:
    dataConnectorName: hoton_main_pg
    dataConnectorCommand:
      procedure: update_auth_user_role_mapping_by_role_id_and_user_id
    argumentMapping:
      keyRoleId: key_role_id
      keyUserId: key_user_id
      postCheck: post_check
      preCheck: pre_check
      updateColumns: update_columns
  graphql:
    rootFieldName: updateAuthUserRoleMappingByRoleIdAndUserId
    rootFieldKind: Mutation
  description: Update any row on the 'auth_user_role_mapping' collection using the
    'role_id' and 'user_id' keys

---
kind: CommandPermissions
version: v1
definition:
  commandName: UpdateAuthUserRoleMappingByRoleIdAndUserId
  permissions:
    - role: admin
      allowExecution: true

