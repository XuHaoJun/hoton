---
kind: ObjectType
version: v1
definition:
  name: AuthRealmEnabledEventTypes
  fields:
    - name: realmId
      type: Varchar!
    - name: value
      type: Varchar!
  graphql:
    typeName: AuthRealmEnabledEventTypes
    inputTypeName: AuthRealmEnabledEventTypesInput
  dataConnectorTypeMapping:
    - dataConnectorName: hoton_main_pg
      dataConnectorObjectType: auth_realm_enabled_event_types
      fieldMapping:
        realmId:
          column:
            name: realm_id
        value:
          column:
            name: value

---
kind: TypePermissions
version: v1
definition:
  typeName: AuthRealmEnabledEventTypes
  permissions:
    - role: admin
      output:
        allowedFields:
          - realmId
          - value

---
kind: BooleanExpressionType
version: v1
definition:
  name: AuthRealmEnabledEventTypesBoolExp
  operand:
    object:
      type: AuthRealmEnabledEventTypes
      comparableFields:
        - fieldName: realmId
          booleanExpressionType: VarcharBoolExp
        - fieldName: value
          booleanExpressionType: VarcharBoolExp
      comparableRelationships:
        - relationshipName: authRealm
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: AuthRealmEnabledEventTypesBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: AuthRealmEnabledEventTypesAggExp
  operand:
    object:
      aggregatedType: AuthRealmEnabledEventTypes
      aggregatableFields:
        - fieldName: realmId
          aggregateExpression: VarcharAggExp
        - fieldName: value
          aggregateExpression: VarcharAggExp
  count:
    enable: true
  graphql:
    selectTypeName: AuthRealmEnabledEventTypesAggExp

---
kind: Model
version: v1
definition:
  name: AuthRealmEnabledEventTypes
  objectType: AuthRealmEnabledEventTypes
  source:
    dataConnectorName: hoton_main_pg
    collection: auth_realm_enabled_event_types
  filterExpressionType: AuthRealmEnabledEventTypesBoolExp
  aggregateExpression: AuthRealmEnabledEventTypesAggExp
  orderableFields:
    - fieldName: realmId
      orderByDirections:
        enableAll: true
    - fieldName: value
      orderByDirections:
        enableAll: true
  graphql:
    selectMany:
      queryRootField: authRealmEnabledEventTypes
      subscription:
        rootField: authRealmEnabledEventTypes
    selectUniques:
      - queryRootField: authRealmEnabledEventTypesByConstrRealmEnablEventTypes
        uniqueIdentifier:
          - realmId
          - value
        subscription:
          rootField: authRealmEnabledEventTypesByConstrRealmEnablEventTypes
    orderByExpressionType: AuthRealmEnabledEventTypesOrderBy
    filterInputTypeName: AuthRealmEnabledEventTypesFilterInput
    aggregate:
      queryRootField: authRealmEnabledEventTypesAggregate
      subscription:
        rootField: authRealmEnabledEventTypesAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: AuthRealmEnabledEventTypes
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: authRealm
  sourceType: AuthRealmEnabledEventTypes
  target:
    model:
      name: AuthRealm
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: realmId
      target:
        modelField:
          - fieldName: id

